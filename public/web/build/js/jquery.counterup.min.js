/*!
 * jquery.counterup.js 1.3 (معدل)
 */
(function ($) {
    "use strict";
    $.fn.counterUp = function (options) {
        var settings = $.extend({
            time: 400,  // المدة الكلية للعد
            delay: 10   // التأخير بين كل زيادة
        }, options);

        return this.each(function () {
            var $this = $(this);
            var counterEnd = parseFloat($this.text().replace(/,/g, "")); // قراءة الرقم النهائي بعد إزالة الفواصل
            var steps = Math.ceil(settings.time / settings.delay); // حساب عدد الخطوات
            var decimalPlaces = (counterEnd.toString().split(".")[1] || []).length; // عدد الخانات العشرية إن وجدت

            var generateNumbers = function () {
                var numbers = [];
                for (var i = 0; i <= steps; i++) {
                    var value = (counterEnd / steps) * i;
                    numbers.push(decimalPlaces ? value.toFixed(decimalPlaces) : Math.floor(value));
                }
                return numbers;
            };

            var startCounter = function () {
                $this.data("counterup-nums", generateNumbers());
                $this.text("0"); // إعادة التعيين للصفر

                var updateCounter = function () {
                    $this.text($this.data("counterup-nums").shift());
                    if ($this.data("counterup-nums").length) {
                        setTimeout($this.data("counterup-func"), settings.delay);
                    }
                };

                $this.data("counterup-func", updateCounter);
                setTimeout($this.data("counterup-func"), settings.delay);
            };

            // تشغيل العد في كل مرة يصبح العنصر مرئيًا عند التمرير
            $this.waypoint(function (direction) {
                if (direction === "down") { // تشغيل عند التمرير للأسفل
                    startCounter();
                }
            }, { offset: "90%" }); // يبدأ العد عندما يكون 90% من العنصر مرئيًا
        });
    };
})(jQuery);
